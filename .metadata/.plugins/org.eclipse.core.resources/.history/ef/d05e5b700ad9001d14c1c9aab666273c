package com.brnozgn.demo.business.concretes;

import java.util.UUID;

import org.modelmapper.ModelMapper;
import org.springframework.stereotype.Service;

import com.brnozgn.demo.business.abstracts.NovelistService;
import com.brnozgn.demo.business.constants.Messages;
import com.brnozgn.demo.business.dto.requests.create.CreateNovelistRequest;
import com.brnozgn.demo.business.dto.requests.update.UpdateNovelistRequest;
import com.brnozgn.demo.business.dto.responses.create.CreateNovelistResponse;
import com.brnozgn.demo.business.dto.responses.update.UpdateNovelistResponse;
import com.brnozgn.demo.dataAccess.NovelistRepository;
import com.brnozgn.demo.entities.Novelist;
import com.brnozgn.demo.utilities.results.DataResult;
import com.brnozgn.demo.utilities.results.SuccessDataResult;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor
public class NovelistManager implements NovelistService {
	private NovelistRepository repository;
	private ModelMapper modelMapper;

	@Override
	public DataResult<CreateNovelistResponse> add(CreateNovelistRequest novelistRequest) {
		Novelist novelist = this.modelMapper.map(novelistRequest, Novelist.class);
		novelist.setId(UUID.randomUUID().toString());
		this.repository.save(novelist);
		CreateNovelistResponse response = this.modelMapper.map(novelist, CreateNovelistResponse.class);
		return new SuccessDataResult<CreateNovelistResponse>(response, Messages.CreatedNovelist);
	}

	public DataResult<UpdateNovelistResponse> update(UpdateNovelistRequest request) {
		Novelist novelist = this.modelMapper.map(request, Novelist.class);
		this.repository.save(novelist);

		UpdateNovelistResponse response = this.modelMapper.map(novelist, UpdateNovelistResponse.class);
		return new SuccessDataResult<UpdateNovelistResponse>(response, Messages.UpdatedNovelist);
	}
}
